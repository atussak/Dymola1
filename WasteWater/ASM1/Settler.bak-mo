within WasteWater.ASM1;
model Settler "Ideal basin settler"

  WasteWater.ASM1.Interfaces.WWFlowAsm1in  Feed
  annotation (Placement(transformation(extent={{-100,40},{-80,60}}),
        iconTransformation(extent={{-100,40},{-80,60}})));

  WasteWater.ASM1.Interfaces.WWFlowAsm1out Recycle
  annotation (Placement(transformation(extent={{74,2},{94,22}}),
        iconTransformation(extent={{74,2},{94,22}})));

  WasteWater.ASM1.Interfaces.WWFlowAsm1out Waste
  annotation (Placement(transformation(extent={{74,-18},{94,2}}),
        iconTransformation(extent={{74,-18},{94,2}})));

  WasteWater.ASM1.Interfaces.WWFlowAsm1out Effluent
  annotation (Placement(transformation(extent={{74,40},{94,60}}),
        iconTransformation(extent={{74,40},{94,60}})));

equation
  // Volumetric flowrate in = volumetric flowrate out

  // Amount of solutes entering = amount of solutes leaving
  Feed.Si*Feed.Q + Waste.Si*Waste.Q  + Effluent.Si*Effluent.Q  + Recycle.Si*Recycle.Q = 0;
  Feed.Ss*Feed.Q + Waste.Ss*Waste.Q  + Effluent.Ss*Effluent.Q  + Recycle.Ss*Recycle.Q = 0;
  Feed.Xi*Feed.Q + Waste.Xi*Waste.Q  + Effluent.Xi*Effluent.Q  + Recycle.Xi*Recycle.Q = 0;
  Feed.Xs*Feed.Q + Waste.Xs*Waste.Q  + Effluent.Xs*Effluent.Q  + Recycle.Xs*Recycle.Q = 0;
  Feed.Xbh*Feed.Q + Waste.Xbh*Waste.Q  + Effluent.Xbh*Effluent.Q  + Recycle.Xbh*Recycle.Q = 0;
  Feed.Xba*Feed.Q + Waste.Xba*Waste.Q  + Effluent.Xba*Effluent.Q  + Recycle.Xba*Recycle.Q = 0;
  Feed.Xp*Feed.Q  + Waste.Xp*Waste.Q  + Effluent.Xp*Effluent.Q  + Recycle.Xp*Recycle.Q = 0;
  Feed.So*Feed.Q  + Waste.So*Waste.Q  + Effluent.So*Effluent.Q  + Recycle.So*Recycle.Q = 0;
  Feed.Sno*Feed.Q + Waste.Sno*Waste.Q  + Effluent.Sno*Effluent.Q  + Recycle.Sno*Recycle.Q = 0;
  Feed.Snh*Feed.Q + Waste.Snh*Waste.Q  + Effluent.Snh*Effluent.Q  + Recycle.Snh*Recycle.Q = 0;
  Feed.Snd*Feed.Q + Waste.Snd*Waste.Q  + Effluent.Snd*Effluent.Q  + Recycle.Snd*Recycle.Q = 0;
  Feed.Xnd*Feed.Q + Waste.Xnd*Waste.Q  + Effluent.Xnd*Effluent.Q  + Recycle.Xnd*Recycle.Q = 0;
  Feed.Salk*Feed.Q + Waste.Salk*Waste.Q  + Effluent.Salk*Effluent.Q  + Recycle.Salk*Recycle.Q = 0;

  // Equation 2
  Effluent.Xi = 0;
  Effluent.Xs = 0;
  Effluent.Xbh = 0;
  Effluent.Xba = 0;
  Effluent.Xp = 0;
  Effluent.Xnd = 0;

  // Equation 3
  Feed.Q + Effluent.Q + Recycle.Q + Waste.Q = 0;

  // Concentrations of Recycle and Waste are identical
  Recycle.Si   = Waste.Si;
  Recycle.Ss   = Waste.Ss;
  Recycle.Xi   = Waste.Xi;
  Recycle.Xs   = Waste.Xs;
  Recycle.Xbh  = Waste.Xbh;
  Recycle.Xba  = Waste.Xba;
  Recycle.Xp   = Waste.Xp;
  Recycle.So   = Waste.So;
  Recycle.Sno  = Waste.Sno;
  Recycle.Snh  = Waste.Snh;
  Recycle.Snd  = Waste.Snd;
  Recycle.Xnd  = Waste.Xnd;
  Recycle.Salk = Waste.Salk;

  // Effluent has 0 biomass concentrations

  // Effluent has the same concentrations of non-biomass components as Recycle and Waste
  Effluent.Si   = Waste.Si;
  Effluent.Ss   = Waste.Ss;
  Effluent.So   = Waste.So;
  Effluent.Sno  = Waste.Sno;
  Effluent.Snh  = Waste.Snh;
  Effluent.Snd  = Waste.Snd;
  Effluent.Salk = Waste.Salk;

  annotation (Icon(graphics={
        Line(
          points={{-72,60},{-72,-18},{58,-18}},
          color={28,108,200},
          thickness=1),
        Line(
          points={{58,-18},{58,60}},
          color={28,108,200},
          thickness=1),
        Ellipse(
          extent={{-42,44},{-28,30}},
          lineColor={238,46,47},
          lineThickness=1,
          fillColor={238,46,47},
          fillPattern=FillPattern.Solid),
        Ellipse(
          extent={{20,44},{34,30}},
          lineColor={238,46,47},
          lineThickness=1,
          fillColor={238,46,47},
          fillPattern=FillPattern.Solid)}));
end Settler;
